version: "3.8"

services:
    db:
        image: postgres
        container_name: postgres
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "admin" ]
            timeout: 45s
            interval: 30s
            retries: 10
        restart: always
        environment: 
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=admin
            - POSTGRES_DB=postgres
        expose: 
            - "5432"
        volumes:
            - "../../DB/data:/data"
            - "../../DB/db_build.sh:/docker-entrypoint-initdb.d/db_build.sh"
        networks:
          node_net:
            ipv4_address: 172.28.1.4
    app:
        depends_on: 
            - db
        links:
            - db
        build:
            context: ../
            dockerfile: docker/Dockerfile

        networks: 
            - node_net
        ports: 
            - "80:80"
        environment: 
            - WAIT_HOSTS=db:5432
            - WAIT_HOSTS_TIMEOUT=300
            - WAIT_SLEEP_INTERVAL=15
            - WAIT_HOST_CONNECT_TIMEOUT=15
        command: sh -c "/wait && nohup conda run -n yeswebike python get_data_on_time.py & conda run -n yeswebike python wsgi.py"
      
networks:
  node_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
 